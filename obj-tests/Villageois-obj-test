Cas de test 0.1 : cas positif Villageois::testInit1
	Condition initiales : 
		aucune
	Opérations : 
		L0 = init(ERace.HUMAN, 77, 75,10,10.0,10 )
	Oracle OK: 
		getType(L0) == TYPE.VIDE
		getTresor(L0) == TRESOR.BOMB_UP
		getRace() == ERace.HUMAN);
		getLargeur() == 77        
		getHauteur() == 75        
		getForce() == 10            
		getForce() == 10.0        
		getVitesse() == 10 
***********************************************************
Cas de test 1.1 : cas positif Villageois::testInitPre1
	Condition initiales : 
		aucune
	Opérations : 
		L0 = init(ERace.HUMAN, 77, 75,10,10.0,10 )
	Oracle OK: 
		getType(L0) == TYPE.VIDE
		getTresor(L0) == TRESOR.BOMB_UP
		getRace() == ERace.HUMAN);
		getLargeur() == 77        
		getHauteur() == 75        
		getForce() == 10            
		getForce() == 10.0        
		getVitesse() == 10 
***********************************************************
Cas de test 1.2 : cas negatif Villageois::testInitPre2
	Condition initiales : 
		aucune
	Opérations : 
		L0 = init(ERace.HUMAN, 78, 75,10,10.0,10 )
	Oracle Exception:
		Precondition error
	Rapport:
		La largeur n'est pas paire
***********************************************************
Cas de test 2.1 : cas positif Villageois::testRetrait1
	Condition initiales : 
		L0 = init(ERace.HUMAN, 77, 75,10,10.0,10 )
	Opérations : 
		L2.1 = retrait(5)
	Oracle OK: 
		getPointsDeVie=5
		getQuantiteOr=0
		estMort=False
***********************************************************
Cas de test 2.2 : cas negatif Villageois::testRetrait2
	Condition initiales : 
		L0 = init(ERace.HUMAN, 77, 75,10,10.0,10 )
	Opérations : 
		L2.2 = retrait(-5)
	Oracle Exception:
		Precondition error
	Rapport:
		s est negatif
***********************************************************
Cas de test 3.1 : cas positif Villageois::testChargeOr1
	Condition initiales : 
		L0 = init(ERace.HUMAN, 77, 75,10,10.0,10 )
	Opérations : 
		L3.1 = chargeOr(5)
	Oracle OK: 
		getPointsDeVie=10
		getQuantiteOr=5
		estMort=False
***********************************************************
Cas de test 3.2 : cas negatif Villageois::testChargeOr2
	Condition initiales : 
		L0 = init(ERace.HUMAN, 77, 75,10,10.0,10 )
	Opérations : 
		L3.2 = chargeOr(-5)
	Oracle Exception:
		Precondition error
	Rapport:
		s est negatif
***********************************************************
Cas de test 4.1 : cas positif Villageois::testdeChargeOr1
	Condition initiales : 
		L0 = chargeOr(init(ERace.HUMAN, 77, 75,10,10.0,10 ),5)
	Opérations : 
		L4.1 = dechargeOr(5)
	Oracle OK: 
		getPointsDeVie=10
		getQuantiteOr=0
		estMort=False
***********************************************************
Cas de test 4.2 : cas negatif Villageois::testdeChargeOr1
	Condition initiales : 
		L0 = chargeOr(init(ERace.HUMAN, 77, 75,10,10.0,10 ),5)
	Opérations : 
		L4.2 = dechargeOr(-5)
	Oracle Exception:
		Precondition error
	Rapport:
		s est negatif
